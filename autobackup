#!/bin/sh
#stamp=`date +%B_%d_%y_%I%M`
stamp=`date +%B_%d`
#stamp=`date +%S_%B_%d_%y`

HOME=/home/avp/circle
MAILTO=avp

pushd $HOME

if test ! -d backup
then
  mkdir backup
fi

if test ! -d backup/list
then
  mkdir backup/list
fi

if test -f lib/core
then
  mv lib/core .
  if test ! -f core.gz
  then
    gzip core
  fi
fi

# Are there any backups already?
if test -f backup/backup_full.tar.gz
then
  if test `date +%w` -eq 1
  then
    echo "It's Monday!  Time for a complete backup."
    # On Mondays, make a list for a complete backup and purge old backups.
    find lib -type f -print > backup/list/list.$stamp
    # And now, to purge the backup directory of old files.
    cd backup
    # Get rid of all files of less than 3000k that are over 2 weeks old.
    find ./AVP* -type f -size -3000k -mtime +21 -print > purgelist
    find ./AVP* -type f -size 3000k -mtime +21 -print >> purgelist
    # Get rid of all files of more than 1000k that are over 21 days old.
    find ./AVP* -type f -size +3000k -mtime +35 -print >> purgelist
    rm -f `cat purgelist`
    cd ..
  else
    echo "Making an incremental backup..."
    # Make a list for an incremental backup.
    if test -f backup/backup_incr_1.tar.gz
    then 
      find lib -newer backup/backup_incr_1.tar.gz -type f -print > backup/list/list.$stamp
    else
      find lib -newer backup/backup_full.tar.gz -type f -print > backup/list/list.$stamp
    fi
  fi
else
  echo "No previous backups found, making a complete backup!"
  # No previous backups exist, make a list for a complete backup.
  find lib -type f -print > backup/list/list.$stamp
  #tar -zcvf backup/AVP_lib.$stamp.tar.gz `cat backup/list/list.$stamp` | tee backup/homeindex
  tar -zcvf backup/AVP_lib.$stamp.tar.gz --files-from=backup/list/list.$stamp | tee backup/homeindex
  ln -s $PWD/backup/AVP_lib.$stamp.tar.gz $PWD/backup/backup_full.tar.gz
  exit
fi

#tar -zcvf backup/AVP_lib.$stamp.tar.gz `cat backup/list/list.$stamp` | tee backup/homeindex
tar -zcvf backup/AVP_lib.$stamp.tar.gz --files-from=backup/list/list.$stamp | tee backup/homeindex
# Symbolic links made for ease of use, especially if we make the MUD
# automatically retrieve backups.

if test `date +%w` -eq 1
then 
  rm -f $PWD/backup/backup_*.tar.gz
  ln -s $PWD/backup/AVP_lib.$stamp.tar.gz $PWD/backup/backup_full.tar.gz
else
  rm -f backup/backup_incr_3.tar.gz
  mv backup/backup_incr_2.tar.gz backup/backup_incr_3.tar.gz
  mv backup/backup_incr_1.tar.gz backup/backup_incr_2.tar.gz
  ln -s $PWD/backup/AVP_lib.$stamp.tar.gz $PWD/backup/backup_incr_1.tar.gz
fi

#mv core lib/core

popd
